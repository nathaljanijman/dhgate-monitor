name: 'DHgate Monitor - Cloud Selenium'

on:
  schedule:
    # Runs daily at 09:00 UTC (10:00 CET in winter, 11:00 CEST in summer)
    - cron: '0 9 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  selenium-monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: üì¶ Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-full.txt
        
    - name: üåê Setup Chrome browser
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # Install ChromeDriver
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%.*}/chromedriver_linux64.zip"
        unzip /tmp/chromedriver.zip -d /tmp/
        sudo mv /tmp/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        
    - name: ü§ñ Run DHgate Selenium monitoring
      env:
        ENVIRONMENT: production
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
      run: |
        echo "ü§ñ Starting GitHub Actions DHgate monitoring..."
        echo "‚è∞ Timestamp: $(date)"
        echo "üåç Environment: $ENVIRONMENT"
        
        # Update config with secrets
        python3 update_config_secrets.py
        
        # Run Selenium monitoring
        python3 run_monitor.py
        
    - name: üìä Show logs
      if: always()
      run: |
        echo "üìä Monitoring completed. Logs:"
        if [ -d "logs" ]; then
          ls -la logs/
          echo "=== Monitor Log ==="
          cat logs/monitor.log || echo "No monitor.log found"
        else
          echo "No logs directory found"
        fi