name: 🚀 DHgate Monitor Deployment

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  # Development deployment (automatic for develop branch)
  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test

      - name: 🚀 Deploy to Development
        run: npm run deploy:dev
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: ✅ Verify Development Deployment
        run: |
          echo "Testing development deployment..."
          curl -f https://dev.dhgate-monitor.com/health || exit 1
          echo "✅ Development deployment successful!"

      - name: 📧 Notify Team
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          text: |
            🚀 Development Deployment Complete!
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            URL: https://dev.dhgate-monitor.com
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Production deployment (manual approval required)
  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    needs: []
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run full test suite
        run: |
          npm run test
          npm run test:qa

      - name: 🔍 Check Development Status
        run: |
          echo "Verifying development environment is stable..."
          curl -f https://dev.dhgate-monitor.com/health || exit 1
          echo "✅ Development environment is stable"

      - name: 🚀 Deploy to Production
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: ✅ Verify Production Deployment
        run: |
          echo "Testing production deployment..."
          curl -f https://dhgate-monitor.com/health || exit 1
          echo "✅ Production deployment successful!"

      - name: 📧 Notify Team
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          text: |
            🎉 Production Deployment Complete!
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            URL: https://dhgate-monitor.com
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # QA Testing (runs on both branches)
  qa-testing:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run QA Tests
        run: npm run test:qa
        env:
          BASE_URL: ${{ github.ref == 'refs/heads/main' && 'https://dhgate-monitor.com' || 'https://dev.dhgate-monitor.com' }}

      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: qa-test-results
          path: test-results/

  # Security scanning
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔒 Run Security Audit
        run: npm audit --audit-level=moderate

      - name: 🛡️ Dependency Check
        run: npm run lint
